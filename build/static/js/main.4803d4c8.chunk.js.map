{"version":3,"sources":["components/TodoItem.js","components/Todos.js","components/layout/Header.js","components/AddTodo.js","components/layout/Footer.js","store/containers/Footer.js","store/actions/changeThemeAction.js","components/TodoApp.js","store/reducers/themeReducer.js","store/reducers/index.js","index.js"],"names":["TodoItem","this","props","todo","completed","id","title","className","type","checked","onChange","handleChange","onClick","deleteTodo","React","Component","Todos","todos","map","key","Header","AddTodo","useState","setTitle","onSubmit","e","preventDefault","addTodo","placeholder","value","target","Footer","submitThemeColor","bind","color","console","log","saveColorTheme","nextprops","JSON","stringify","document","documentElement","style","setProperty","themeColor","connect","state","dispatch","payload","saveTheme","TodoApp","setState","useEffect","axios","get","params","_limit","then","response","data","todoData","post","delete","reponse","filter","initState","combineReducers","action","Object","assign","store","createStore","rootReducer","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.4803d4c8.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nclass TodoItem extends React.Component{\r\n    render(){\r\n        const {completed, id, title} = this.props.todo;\r\n        return(\r\n            <li className=\"todo-item\">\r\n                <input type =\"checkbox\" \r\n                checked={completed}\r\n                onChange={()=>this.props.handleChange(id)}\r\n                />\r\n                <span className={this.props.todo.completed? \"completed\": null}>\r\n                    {title}\r\n                </span>\r\n                <button className=\"btn-style\"\r\n                onClick={()=>this.props.deleteTodo(id)}\r\n                >X</button>\r\n               </li>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TodoItem;","import React from \"react\";\r\nimport TodoItem from \"./TodoItem\";\r\nclass Todos extends React.Component{\r\n    render(){\r\n        return(\r\n            <div>\r\n                <ul>\r\n                    {this.props.todos.map(todo => (\r\n                        <TodoItem \r\n                        key = {todo.id} \r\n                        todo = {todo}\r\n                        handleChange={this.props.handleChange}\r\n                        deleteTodo={this.props.deleteTodo}\r\n                        />\r\n\r\n                    ))}\r\n                </ul>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Todos;","import React from \"react\";\r\nclass Header extends React.Component{\r\n    render(){\r\n        return(\r\n            <header className = \"header-container\">\r\n                <h1 className=\"header-title\">Simple Todo App</h1>\r\n            </header>\r\n        );\r\n    }\r\n};\r\nexport default Header;\r\n","import React, { useState } from \"react\";\r\n\r\nfunction AddTodo (props) {\r\n    const [title, setTitle] = useState(\"\");\r\n\r\n    const onInputChange = e => {\r\n        setTitle(e.target.value)\r\n    };\r\n\r\n    const addTodo = e => {\r\n        e.preventDefault();\r\n        props.addTodo(title);\r\n        setTitle(\"\");\r\n    };\r\n\r\n    return (\r\n            <form className=\"form-container\" onSubmit={addTodo}>\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Add Todo...\"\r\n                    className=\"input-text\"\r\n                    value={title}\r\n                    onChange={onInputChange}\r\n                />\r\n                <input \r\n                    type=\"submit\" \r\n                    value=\"Submit\" \r\n                    className=\"input-submit\"/>\r\n            </form>\r\n    );\r\n    \r\n}\r\nexport default AddTodo;\r\n","import React from \"react\";\r\n\r\nconst RED = \"#ff0000\";\r\nconst BLUE = \"#0000ff\";\r\nconst GRAY = \"#678c89\";\r\n\r\nclass Footer extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.submitThemeColor = this.submitThemeColor.bind(this);\r\n  }\r\n\r\n  submitThemeColor(color) {\r\n    if (color) {\r\n      console.log(\"handleChangeTheme\");\r\n      this.props.saveColorTheme(color);\r\n    }\r\n  }\r\n\r\n  componentWillReceiveProps(nextprops) {\r\n    console.log(\r\n      \"UNSAFE_componentWillReceiveProps: \" + JSON.stringify(nextprops)\r\n    );\r\n    document.documentElement.style.setProperty(\r\n      \"--main-color\",\r\n      nextprops.themeColor.color\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"footer\">\r\n        <div className=\"vertical-center\">\r\n          <span>Choose Theme </span>\r\n          <button\r\n            onClick={() => this.submitThemeColor(RED)}\r\n            className=\"dot red\"\r\n          />\r\n          <button\r\n            onClick={() => this.submitThemeColor(BLUE)}\r\n            className=\"dot blue\"\r\n          />\r\n          <button\r\n            onClick={() => this.submitThemeColor(GRAY)}\r\n            className=\"dot gray\"\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Footer;\r\n","import { connect } from \"react-redux\";\r\nimport { saveTheme } from \"../actions/changeThemeAction\";\r\nimport Footer from \"../../components/layout/Footer\";\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  dispatch,\r\n  saveColorTheme: color => dispatch(saveTheme(color))\r\n});\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    themeColor: state.color\r\n  };\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Footer);\r\n","export const saveTheme = color =>({\r\n    type: \"CHANGE_THEME\",\r\n    payload: {\r\n        color\r\n    }\r\n})","import React, { useState, useEffect } from \"react\";\r\nimport Todos from \"./Todos\";\r\nimport Header from \"../components/layout/Header\";\r\nimport AddTodo from \"./AddTodo\";\r\nimport Footer from \"../store/containers/Footer\";\r\n//khai báo thư viện axios\r\nimport axios from \"axios\";\r\n\r\nfunction TodoApp() {\r\n  const [state, setState] = useState({\r\n    todos: []\r\n  });\r\n  const handleCheckboxChange = id => {\r\n    setState({\r\n      todos: state.todos.map(todo => {\r\n        if (todo.id === id) {\r\n          todo.completed = !todo.completed;\r\n        }\r\n        return todo;\r\n      })\r\n    });\r\n  };\r\n  const deleteTodo = id => {\r\n    axios\r\n      .delete(`https://jsonplaceholder.typicode.com/todos/${id}`)\r\n      .then(reponse =>\r\n        setState({\r\n          todos: [\r\n            ...state.todos.filter(todo => {\r\n              return todo.id !== id;\r\n            })\r\n          ]\r\n        })\r\n      );\r\n  };\r\n\r\n  const addTodo = title => {\r\n    const todoData = {\r\n      title: title,\r\n      completed: false\r\n    };\r\n    axios\r\n      .post(\"https://jsonplaceholder.typicode.com/todos\", todoData)\r\n      .then(response => {\r\n        console.log(response.data);\r\n        setState({\r\n          todos: [...state.todos, response.data]\r\n        });\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const config = {\r\n      params: {\r\n        _limit: 5\r\n      }\r\n    };\r\n    // tạo GET request để lấy danh sách todos\r\n    axios\r\n      .get(\"https://jsonplaceholder.typicode.com/todos\", config)\r\n      .then(response => setState({ todos: response.data }));\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <Header />\r\n      <AddTodo addTodo={addTodo} />\r\n      <Todos\r\n        todos={state.todos}\r\n        handleChange={handleCheckboxChange}\r\n        deleteTodo={deleteTodo}\r\n      />\r\n      <Footer />\r\n    </div>\r\n  );\r\n}\r\nexport default TodoApp;\r\n","let initState = {\r\n    color : \"#FFFFFF\"\r\n};\r\n\r\nexport default function themeReducer(state = initState , action){\r\n    switch(action.type){\r\n        case \"CHANGE_THEME\":\r\n            console.log(\"themeReducer: \"+ JSON.stringify(state))\r\n            return Object.assign({}, state,{\r\n                color: action.payload.color\r\n            });\r\n            default: \r\n            return initState;\r\n\r\n    }\r\n}","import { combineReducers } from \"redux\";\r\nimport color from \"./themeReducer\";\r\n\r\nexport default combineReducers({\r\n    color\r\n});","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./App.css\";\r\nimport TodoApp from \"./components/TodoApp\";\r\nimport { createStore } from 'redux';\r\nimport { Provider } from 'react-redux';\r\nimport rootReducer from './store/reducers';\r\n\r\nconst store = createStore(rootReducer);\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <TodoApp />\r\n  </Provider>, document.getElementById('root'));\r\n\r\n"],"sourceRoot":""}